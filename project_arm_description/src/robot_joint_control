#!/usr/bin/env python3

import rospy
from std_msgs.msg import Float64, Float64MultiArray

class robot_joint_control:
    def __init__(self):
        self.joint_1_pub = rospy.Publisher('/project_arm/joint_1_position_controller/command', Float64, queue_size=10)
        self.joint_2_pub = rospy.Publisher('/project_arm/joint_2_position_controller/command', Float64, queue_size=10)
        self.joint_3_pub = rospy.Publisher('/project_arm/joint_3_position_controller/command', Float64, queue_size=10)
        self.joint_4_pub = rospy.Publisher('/project_arm/joint_4_position_controller/command', Float64, queue_size=10)
        self.joint_5_pub = rospy.Publisher('/project_arm/joint_5_position_controller/command', Float64, queue_size=10)
        self.joint_6_pub = rospy.Publisher('/project_arm/joint_6_position_controller/command', Float64, queue_size=10)
        self.joint_7_pub = rospy.Publisher('/project_arm/joint_7_position_controller/command', Float64, queue_size=10)
        
    def joint_positions_callback(self, msg):
        positions = msg        
        if len(positions) == 7:
            self.joint_1_pub.publish(Float64(positions[0]))
            self.joint_2_pub.publish(Float64(positions[1]))
            self.joint_3_pub.publish(Float64(positions[2]))
            self.joint_4_pub.publish(Float64(positions[3]))
            self.joint_5_pub.publish(Float64(positions[4]))
            self.joint_6_pub.publish(Float64(positions[5]))
            self.joint_7_pub.publish(Float64(positions[6]))
        else:
            rospy.logwarn("Received joint positions array with incorrect length: expected 7, got %d", len(positions))

